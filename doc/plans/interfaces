interface I
	func f()
	func g()

class A implements I
	...


func ff(i: I)
	i.f()
let a: A
ff(a)

extra vtable for each interface in class
##no extra pointer for object/offset needed
no data in interface

call via interface
 i.f()
requires 2 pointers... A instance + if-vtable
ARGH



== alternative ==

class A implements I
only performs compile-time checks (do we implement all methods?)

func ff(i: I)
either
* adds wrapper with virtual functions to forward calls ("virtual interface")
* templated ff[T](i: T) ?

interface I as virtual
interface I as template  ???

