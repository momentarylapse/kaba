class X
	var _shared_ref_count: int
	func __init__()
		_shared_ref_count = 0
		print("X.init")
	func __delete__()
		print("X.del")
#	void _ref()
#		_ref_count ++
#		print("ref!!!  {{_ref_count}}")
#	bool _unref()
#		_ref_count --
#		print("unref!!!  {{_ref_count}}")
#		return _ref_count == 0
	func f()
		print("test {{_shared_ref_count}}")


func ff(x: shared[X])
	var z = x
	for _z in z
		_z.f()


func main()
	var x: shared[X]
	var y: shared[X]
	#print(binary(&x, 8).hex())
	x = new X()
	#print(binary(&x, 8).hex())
	y = x
	for _x in x
		_x.f()
	ff(x)
	#print(binary(&x, 8).hex())
	#print(binary(&y, 8).hex())
	
